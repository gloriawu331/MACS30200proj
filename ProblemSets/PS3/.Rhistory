labs(title = "Homoscedastic variance of error terms",
x = "Predicted values",
y = "Residuals")
# rd_mod <- lm(y ~ x, data = biden_data)
biden_data%>%
add_predictions(rd_mod) %>%
add_residuals(rd_mod) %>%
ggplot(aes(pred, resid)) +
geom_point(alpha = .2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_quantile(method = "rqss", lambda = 5, quantiles = c(.05, .95)) +
labs(title = "Homoscedastic variance of error terms",
x = "Predicted values",
y = "Residuals")
# rd_mod <- lm(y ~ x, data = biden_data)
biden_data %>%
add_predictions(rd_mod) %>%
add_residuals(rd_mod) %>%
ggplot(aes(pred, resid)) +
geom_point(alpha = .2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_quantile(method = "rqss", lambda = 5, quantiles = c(.05, .95)) +
labs(title = "Heteroscedastic variance of error terms",
x = "Predicted values",
y = "Residuals")
bptest(rd_mod)
library(GGally)
install.packages('GGally')
library(GGally)
ggpairs(select_if(biden_data, is.numeric))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats)
library(broom)
library(modelr)
library(stringr)
library(ISLR)
library(titanic)
library(rcfss)
library(haven)
library(car)
library(lmtest)
options(digits = 3)
set.seed(1234)
theme_set(theme_minimal())
#```
#``` {r read_data, include=FALSE}
df <- read.csv('biden.csv')
biden_data <- na.omit(df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats)
library(broom)
library(modelr)
library(stringr)
library(ISLR)
library(titanic)
library(rcfss)
library(haven)
library(car)
library(lmtest)
options(digits = 3)
set.seed(1234)
theme_set(theme_minimal())
library(GGally)
ggpairs(select_if(biden_data, is.numeric))
library(GGally)
ggpairs(select_if(biden_data, is.numeric))
vif(rd_mod)
it_mod <- lm(biden ~ age * educ, data = biden_data)
summary(it_mod)
glimpse(biden_data)
instant_effect(it_mod, "Age") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
# function to get point estimates and standard errors
# model - lm object
# mod_var - name of moderating variable in the interaction
instant_effect <- function(model, mod_var){
# get interaction term name
int.name <- names(model$coefficients)[[which(str_detect(names(model$coefficients), ":"))]]
marg_var <- str_split(int.name, ":")[[1]][[which(str_split(int.name, ":")[[1]] != mod_var)]]
# store coefficients and covariance matrix
beta.hat <- coef(model)
cov <- vcov(model)
# possible set of values for mod_var
if(class(model)[[1]] == "lm"){
z <- seq(min(model$model[[mod_var]]), max(model$model[[mod_var]]))
} else {
z <- seq(min(model$data[[mod_var]]), max(model$data[[mod_var]]))
}
# calculate instantaneous effect
dy.dx <- beta.hat[[marg_var]] + beta.hat[[int.name]] * z
# calculate standard errors for instantaeous effect
se.dy.dx <- sqrt(cov[marg_var, marg_var] +
z^2 * cov[int.name, int.name] +
2 * z * cov[marg_var, int.name])
# combine into data frame
data_frame(z = z,
dy.dx = dy.dx,
se = se.dy.dx)
}
instant_effect(it_mod, "Age") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
instant_effect(it_mod, "age") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
instant_effect(it_mod, "educ") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
instant_effect(it_mod, "age") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
biden_all <- read.csv('biden.csv')
instant_effect(it_mod, "educ") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
linearHypothesis(it_mod, "age + age:educ")
instant_effect(it_mod, "age") %>%
ggplot(aes(z, dy.dx,
ymin = dy.dx - 1.96 * se,
ymax = dy.dx + 1.96 * se)) +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Marginal effect of Obama's conservatism",
subtitle = "By respondent conservatism",
x = "Respondent conservatism",
y = "Estimated marginal effect")
linearHypothesis(it_mod, "educ + age:educ")
View(biden_all)
View(biden_all)
is.na(biden_all$biden)
is.na(biden_all$age)
is.na(biden_all$female)
is.na(biden_all$educ)
mean(biden_all$biden)
mean(na.omit(biden_all$biden))
mean(na.omit(biden_all$biden))
mean(na.omit(biden_all$biden))
library(Amelia)
install.packages('Amelia')
library(Amelia)
biden_all <- read.csv('biden.csv')
# check if there are any missing values in the variables
# is.na(biden_all$biden) => yes
# is.na(biden_all$age) => yes
# is.na(biden_all$female) => no
# is.na(biden_all$educ) => yes
# deal with the missing values
# age
# biden thermometer
# biden_mean <- mean(na.omit(biden))
biden.out <- amelia(as.data.frame(biden_all), m = 5, idvars = c("country", "region"))
# check if there are any missing values in the variables
# is.na(biden_all$biden) => yes
# is.na(biden_all$age) => yes
# is.na(biden_all$female) => no
# is.na(biden_all$educ) => yes
# deal with the missing values
# age
# biden thermometer
# biden_mean <- mean(na.omit(biden))
biden.out <- amelia(as.data.frame(biden_all), m = 5, idvars = c("age", "female"))
# check if there are any missing values in the variables
# is.na(biden_all$biden) => yes
# is.na(biden_all$age) => yes
# is.na(biden_all$female) => no
# is.na(biden_all$educ) => yes
# deal with the missing values
# age
# biden thermometer
# biden_mean <- mean(na.omit(biden))
biden.out <- amelia(as.data.frame(biden_all), m = 5, idvars = c("age", "educ", "female"))
biden.out
biden_used <- biden_all%>%
select(-rep, -dem)
uniPlot(biden_used, type="qqplot")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats)
library(broom)
library(modelr)
library(stringr)
library(ISLR)
library(titanic)
library(rcfss)
library(haven)
library(car)
library(lmtest)
library(MVN)
install.packages('MVN')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats)
library(broom)
library(modelr)
library(stringr)
library(ISLR)
library(titanic)
library(rcfss)
library(haven)
library(car)
library(lmtest)
library(MVN)
options(digits = 3)
set.seed(1234)
theme_set(theme_minimal())
biden_used <- biden_all%>%
select(-rep, -dem)
uniPlot(biden_used, type="qqplot")
biden_used <- biden_all%>%
select(-rep, -dem)
uniPlot(biden_used, type="qqplot")
mardiaTest(biden_used, qqplot = FALSE)
biden_used <- biden_all%>%
select(-rep, -dem)
#uniPlot(biden_used, type="qqplot")
mardiaTest(biden_used, qqplot = TRUE)
biden_used <- biden_all%>%
select(-rep, -dem)
mardiaTest(biden_used, qqplot = TRUE)
uniPlot(biden_used, type="qqplot")
biden_trans <- biden_used%>%
mutate(age_sqrt = sqrt(age),
educ_sqrt = sqrt(educ))
uniPlot(biden_trans, type="qqplot")
biden_used <- biden_all%>%
select(-rep, -dem)
mardiaTest(biden_used, qqplot = TRUE)
uniPlot(biden_used, type="qqplot")
biden_trans <- biden_used%>%
mutate(educ_sqrt = sqrt(educ))
uniPlot(biden_trans, type="qqplot")
biden_trans <- biden_used%>%
mutate(educ_sqrt = sqrt(educ))
uniPlot(biden_trans, type="qqplot")
biden_trans <- biden_used%>%
select(-educ)
mardiaTest(biden_trans, qqplot = TRUE)
missmap(biden_trans)
missmap(as.data.frame(biden_trans))
missmap(as.data.frame(biden_used))
un.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- amelia(as.data.frame(biden_trans), m = 5)
str(biden.out$imputations, max.level=2)
biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- amelia(as.data.frame(biden_trans), m = 5)
str(biden.out$imputations, max.level=2)
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
mutate(dem = as.numeric(dem),
rep = as.numeric(rep)) %>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
missmap(biden.out)
str(biden.out$imputations, max.level=2)
qqnorm(biden_used$)
biden.out$imputations
models_imp <- data_frame(data = biden.out$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age + female + educ,
data = .x)),
coef = map(model, tidy)) %>%
unnest(coef, .id = "id")
summary(models_imp)
models_imp <- data_frame(data = biden.out$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age + female + educ,
data = .x)),
coef = map(model, tidy)) %>%
unnest(coef, .id = "id")
tidy(models_imp)
models_imp <- data_frame(data = biden.out$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age + female + educ,
data = .x)),
coef = map(model, tidy)) %>%
unnest(coef, .id = "id")
models_imp
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
tidy(mortal_mod) %>%
left_join(mi.meld.plus(models_imp)) %>%
select(-statistic, -p.value)
tidy(rd_mod) %>%
left_join(mi.meld.plus(models_imp)) %>%
select(-statistic, -p.value)
r nrow(biden_1_augment))
nrow(biden_1_augment))
nrow(biden_1_augment)
nrow(biden_augment_1)
ggplot(biden_augment_1, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = influential), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Party",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
ggplot(biden_augment_1, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = infl), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Party",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
biden_augment%>%
mutate(influential = factor(ifelse(influ == 200, "influential", "others"))) %>%
{.} -> biden_2
biden_augment%>%
mutate(influential = factor(ifelse(infl == 200, "influential", "others"))) %>%
{.} -> biden_2
ggplot(biden_augment_1, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = influential), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Party",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
biden_augment%>%
mutate(influential = factor(ifelse(infl == 200, "influential", "others"))) %>%
{.} -> biden_augment_2
ggplot(biden_augment_2, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = influential), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Party",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
biden_augment%>%
mutate(influential = factor(ifelse(infl == 200, "influential", "others"))) %>%
mutate(discrepant = factor(ifelse(disc == 20, "discrepant", "others")))%>%
mutate(levg = factor(ifelse(lev == 2, "leverage", "others")))
{.} -> biden_augment_2
biden_augment%>%
mutate(influential = factor(ifelse(infl == 200, "influential", "others"))) %>%
mutate(discrepant = factor(ifelse(disc == 20, "discrepant", "others")))%>%
mutate(levg = factor(ifelse(lev == 2, "leverage", "others")))%>%
{.} -> biden_augment_2
ggplot(biden_augment_2, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = influential), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Female",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
ggplot(biden_augment_2, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = discrepant), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Female",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
ggplot(biden_augment_2, mapping = aes(x = female)) +
geom_histogram(mapping = aes(fill = levg), width = 0.5, stat="count") +
labs(title = "Distribution of party members among usual/influential observations",
x = "Female",
y = "Frequency count of individuals") +
guides(fill = guide_legend(title = ''))
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
mutate(dem = as.numeric(dem),
rep = as.numeric(rep)) %>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
missmap(biden.out)
missmap(as.data.frame(biden_used))
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
#mutate(dem = as.numeric(dem),
#       rep = as.numeric(rep)) %>%
select(-dem, -rep)%>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
missmap(biden.out)
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
#mutate(dem = as.numeric(dem),
#       rep = as.numeric(rep)) %>%
#select(-dem, -rep)%>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
missmap(biden.out)
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
#mutate(dem = as.numeric(dem),
#       rep = as.numeric(rep)) %>%
mutate(select(-dem, -rep))%>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
#mutate(dem = as.numeric(dem),
#       rep = as.numeric(rep)) %>%
select(-dem, -rep)%>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
missmap(biden.out)
#biden.out <- amelia(as.data.frame(biden_trans), m = 5)
biden.out <- biden_all %>%
#mutate(dem = as.numeric(dem),
#       rep = as.numeric(rep)) %>%
select(-dem, -rep)%>%
amelia(., m=5, sqrts = c("age", "educ"),
noms = c("female"), p2s = 0)
missmap(biden.out)
str(biden.out$imputations, max.level=2)
str(biden.out$imputations, max.level=2)
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
models_ori <- lm(biden ~ age + female + educ^2, data=biden_data)
summary(models_ori)
models_imp <- data_frame(data = biden.out$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age + female + educ^2,
data = .x)),
coef = map(model, tidy)) %>%
unnest(coef, .id = "id")
summary(models_imp)
models_ori <- lm(biden ~ age + female + educ^2, data=biden_data)
summary(models_ori)
models_imp <- data_frame(data = biden.out$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age + female + educ^2,
data = .x)),
coef = map(model, tidy)) %>%
unnest(coef, .id = "id")
models_imp
cat("Linear Regression Model with edu^2")
models_ori <- lm(biden ~ age + female + educ^2, data=biden_data)
summary(models_ori)
models_imp <- data_frame(data = biden.out$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age + female + educ^2,
data = .x)),
coef = map(model, tidy)) %>%
unnest(coef, .id = "id")
models_imp
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
tidy(models_ori) %>%
left_join(mi.meld.plus(models_imp)) %>%
select(-statistic, -p.value)
